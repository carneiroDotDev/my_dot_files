# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Some applications read the EDITOR variable to determine your favourite text
# editor. So uncomment the line below and enter the editor of your choice :-)
export EDITOR=/usr/bin/vim
#export EDITOR=/usr/bin/mcedit

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Some applications read the EDITOR variable to determine your favourite text
# editor. So uncomment the line below and enter the editor of your choice :-)
export EDITOR=/usr/bin/vim

                #which is a program which shows the full path of (shell) commands
alias which='alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde'   

alias beep='echo -en "\007"'

alias l='ls -alF'
alias la='ls -la'
alias ll='ls -l '
alias lt='ls -t'
alias ln='ln -i'
alias l.='ls -d .* '

#This is important because, as I use a lot the alias gm, I may do a typo
#and delete some important file.
alias rm='rm -iv'

alias grep='grep --color=always'
alias egrep='egrep --color=always'
alias fgrep='fgrep --color=always'

alias gm='gvim'
alias gr='gvim -R'
alias vd='vimdiff'
alias gvd='gvimdiff'

alias acr='acroread' 
alias mkr='mkdir'  

alias ild='idl'   #open idl even when typo was made
alias lid='idl'
alias ldi='idl'

alias lss='less -JNIQ' #(J-status column, N-number of lines, I-ignorecase, Q-quiet)
alias o='less -JNIQ'
alias mr='more'

alias mv='mv -i'  #ask for confirmation if overwriting'
alias cp='cp -i' 
alias ln='ln -i'

# dir navigation
alias ~="cd ~" 
alias cdd="cd ~/Desktop"
alias ..='cd ..'
alias ...='cd ../..'
alias .1='cd ..' 
alias .2='cd ../../' 
alias .3='cd ../../../'
alias .4='cd ../../../../'
alias .5='cd ../../../../../'
alias c="clear"

alias d=diff

alias rehash='hash -r'
alias unmount='echo "Error: Try the command: umount" 1>&2; false'
alias you='if test "$EUID" = 0 ; then /sbin/yast2 online_update ; else su - -c "/sbin/yast2 online_update" ; fi'

# editing/reloading bash configs
alias editBash="vim -e ~/.bash_profile"
alias reloadBash="source ~/.bash_profile"
alias editBashPrompt="vim -e ~/.bash_prompt"
alias reloadBashPrompt="source ~/.bash_prompt"
alias editBashRc="vim -e ~/.bashrc"
alias reloadBashRc="source ~/.bashrc"

alias cleanWatchman="watchman watch-del-all"
alias nodeReactNative="node ./rn-cli-config.js &"

alias reactNativeCleanAll="watchman watch-del-all; rm -rf node_modules && yarn install; rm
-rf /tmp/metro-bundler-cache-*; rm -rf /tmp/haste-map-react-native-packager-*"

alias dockerTest="docker build -t luiz .; docker run -it -p 8080:80 luiz"

alias huskyClean="rm -rf .git/hooks/; rm -rf node_modules; yarn"

alias nativeProblems="watchman watch-del-all; rm -rf /tmp/metro-bundler-cache-*; rm -rf /tmp/haste-map-react-native-packager-*"

alias nativeProblems="watchman watch-del-all; rm -rf /tmp/metro-bundler-cache-*; rm -rf
/tmp/haste-map-react-native-packager-*; rm -rf ~/.rncache"

# alias for the use of GIT
#s="git status -s"
#
#a=add
#ap=add -p
#
#c=commit --verbose
#ca=commit -a --verbose
#cm=commit -m
#cam=commit -a -m
#m=commit --amend --verbose
#
#ds=diff --stat
#dc=diff --cached
#
#s=status -s
#
#co=checkout
#cob=checkout -b

source ~/git-prompt.sh
export GIT_PS1_SHOWDIRTYSTATE=1

# git commands
alias ga="git add -A"
alias gb="git branch"
alias gc="git commit"
alias gcm="git commit -m"
alias gcam="git commit -a -m"
alias gchk="git checkout"
alias gcp="git cherry-pick"
alias gd="git diff"
alias gdt="git difftool --tool=gvimdiff"
alias go="git checkout"
alias gl="git log --graph --all"
alias gpl="git pull"
alias gps="git push"
alias gss="git status"
alias gs="git status --short"
alias glpf="git log --pretty=format:'%h - %an, %ar : %s'"
alias grv="git remote -v"
alias grau="git remote add upstream "  #This alias requests the link of the original repo after it
# git config --global core.editor --> To set the editor = $EDITOR

#alias in form of functions
mcd() { mkdir -p "$1"; cd "$1";}  #Make a directory and cd into it in one command: mcd name
cls() { cd "$1"; ls;}  #cd into a directory and list its content: cls name.
chrome () {
    /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome
  }

# Change command prompt
source ~/git-prompt.sh
export GIT_PS1_SHOWDIRTYSTATE=1

#make command line smaller:
#if [ "$color_prompt" = yes ]; then
#    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u\[\033[00m\]:\[\033[01;34m\]\W\[\033[00m\]\$ '
#ese
#    PS1='${debian_chroot:+($debian_chroot)}\u:\W\$ '
#fi
#or
#export PS1='$(whoami):${PWD/*\//}> '
#export PS1='\[\033[0;36m\]\A\[\033[1;30m\] $(whoami):${PWD/*\//}> '
green="\[\033[0;32m\]"
red="\[\033[0;36m\]"
black="\[\033[1;30m\]"
reset="\[\033[0m\]"
blue="\[\033[0;34m\]"
export PS1='\[\033[0;36m\]\A\[\033[1;30m\] $(whoami)\[\033[0;32m\]$(__git_ps1)\[\033[1;30m\]:${PWD/*\//}> '
#export PS1='$(whoami)@\h:${PWD/*\//}> '
#This last one is really complex and Ive set just for educacional propose (an example):
#export PS1="\[\033[s\033[0;0H\033[0;41m\033[K\033[1;33m\t\033[0m\033[u\]<\u@\h \W>\$ "

# Ignore duplicates in command history and increase
# history size to 1000 lines
export HISTCONTROL=ignoredups
export HISTSIZE=1000

#Note if this is not set in the .gitconfig
#git config --global push.default upstream
#git config --global merge.conflictstyle diff3
#git log --graph --oneline master branch 

#npm run serve
#browser-sync start --server --directory --files "**/*" &
#sass --watch node_modules/bootstrap/scss:node_modules/bootstrap/compiler
#npm install --save-dep gulp
#npm install --save-dev gulp-imagemin
#npm install --save-dev gulp-uglify
#npm install gulp-sass --save-dev
#npm install --save-dev gulp-concat
#npm install browser-sync gulp --save-dev
#npm install bootstrap@4.0.0-beta font-awesome jquery popper.js --save 
#npm install gulp gulp-sass gulp-jade gulp-rename gulp-concat browser-synv --sav-dev

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

#react-native
#  react-native run-ios --simulator="iPhone 5s"
#  react-native run-ios --simulator="iPhone 6"
#  react-native run-ios --simulator="iPhone 6 Plus"
#  react-native run-ios --simulator="iPhone 6s"
#  react-native run-ios --simulator="iPhone 6s Plus"
#  react-native run-ios --simulator="iPhone 7"
#  react-native run-ios --simulator="iPhone 7 Plus"
#  react-native run-ios --simulator="iPhone 8"
#  react-native run-ios --simulator="iPhone 8 Plus"
#  react-native run-ios --simulator="iPhone SE"
#  react-native run-ios --simulator="iPhone X"
#  react-native run-ios --simulator="iPhone XR"
#  react-native run-ios --simulator="iPhone XS"
#  react-native run-ios --simulator="iPhone XS Max"
#  react-native run-ios --simulator="iPad Air"
#  react-native run-ios --simulator="iPad Air 2"
#  react-native run-ios --simulator="iPad"
#  react-native run-ios --simulator="iPad Pro"
#  react-native run-ios --simulator="iPad Pro"
#  react-native run-ios --simulator="iPad Pro"
#  react-native run-ios --simulator="iPad Pro"
#  react-native run-ios --simulator="iPad"

