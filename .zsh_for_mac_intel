
# ------ Personal Configs -------
# Some applications read the EDITOR variable to determine your favourite text
# editor. So uncomment the line below and enter the editor of your choice :-)
export EDITOR=/usr/bin/vim

# ------ Aliases -------

#which is a program which shows the full path of (shell) commands
alias which='alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde'   

alias beep='echo -en "\007"'

alias l='ls -alF'
alias la='ls -la'
alias ll='ls -l '
alias lt='ls -t'
alias ln='ln -i'
alias l.='ls -d .* '

#This is important to avoid unwanted file deletion
alias rm='rm -iv'

alias grep='grep --color=always'
alias egrep='egrep --color=always'
alias fgrep='fgrep --color=always'

alias acr='acroread' 
alias mkr='mkdir'

alias mv='mv -i'  #ask for confirmation if overwriting'
alias cp='cp -i' 
alias ln='ln -i'

# dir navigation
alias ~="cd ~" 
alias cdd="cd ~/Desktop"
alias ..='cd ..'
alias ...='cd ../..'
alias .1='cd ..' 
alias .2='cd ../../' 
alias .3='cd ../../../'
alias .4='cd ../../../../'
alias .5='cd ../../../../../'

alias c="clear"
alias d="diff"

# -- NPM aliases
alias ndev="npm run dev"
alias nbuild="npm run build"
alias nstart="npm run start"
alias nlint="npm run lint"
alias ntest="npm run test"

# -- Open NVIM
alias nv="nvim"

# -- Open Python
alias python=python3
alias py=python3
alias installPip="python3 -m ensurepip --upgrade"
alias installWatcher="pip install watcher-cli"

#alias in form of functions
mcd() { mkdir -p "$1"; cd "$1";}  #Make a directory and cd into it in one command: mcd name
cls() { cd "$1"; ls;}  #cd into a directory and list its content: cls name.
chrome () {
    /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome
  }

#Git aliases
source ~/git-prompt.sh
export GIT_PS1_SHOWDIRTYSTATE=1

alias ga="git add -A"
alias gb="git branch"
alias gc="git commit"
alias gcm="git commit -m"
alias gcam="git commit -a -m"
alias gcp="git cherry-pick"
alias gd="git diff"
alias gdt="git difftool --tool=gvimdiff"
alias got="git checkout"
alias gob="git checkout -b"
alias gl="git log --graph --all"
alias gpl="git pull"
alias gps="git push"
alias gss="git status"
alias gs="git status --short"
alias glpf="git log --pretty=format:'%h - %an, %ar : %s'"
alias grv="git remote -v"
alias grau="git remote add upstream "  

#Reload ZSH
alias reloadzsh="source .zshrc"

# ----- Powerlevel10k Configs -------

# Ignore duplicates in command history and increase
# history size to 1000 lines
export HISTCONTROL=ignoredups
export HISTSIZE=1000

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
#
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

source /usr/local/share/powerlevel10k/powerlevel10k.zsh-theme

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# history setup
HISTFILE=$HOME/.zhistory
SAVEHIST=1000
HISTSIZE=999
setopt share_history
setopt hist_expire_dups_first
setopt hist_ignore_dups
setopt hist_verify

# completion using arrow keys (based on history)
bindkey '^[[A' history-search-backward
bindkey '^[[B' history-search-forward


export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/luizcarneiro/Downloads/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/luizcarneiro/Downloads/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/luizcarneiro/Downloads/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/luizcarneiro/Downloads/google-cloud-sdk/completion.zsh.inc'; fi

# Generated for envman. Do not edit.
[ -s "$HOME/.config/envman/load.sh" ] && source "$HOME/.config/envman/load.sh"
#
export PATH=/Library/PostgreSQL/12/bin:$PATH
export DYLD_LIBRARY_PATH=/Library/PostgreSQL/12/lib:$DYLD_LIBRARY_PATH
export DYLD_LIBRARY_PATH=/Applications/Postgres.app/Contents/Versions/12/lib:$DYLD_LIBRARY_PATH


# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/luizcarneiro/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/luizcarneiro/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/luizcarneiro/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/luizcarneiro/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

